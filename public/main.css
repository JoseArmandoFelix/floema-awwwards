/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.home__link__icon, .home__gallery, .home, .detail__button__icon, .detail__media__image, .detail, .collections__content, .collections__gallery__media__image, .collectios__gallery, .collections__wrapper, .collections, .about__highlight__media__image, .about__gallery__media__image, .about__content__media__image, .navigation, .preloader {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.home, .detail, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
  font-size: 1.2rem;
}
@media (max-width: 767px) {
  .detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
    font-size: 3rem;
  }
}

.home__link, .detail__button, .preloader__number {
  font-size: 1.4rem;
}
@media (max-width: 767px) {
  .home__link, .detail__button, .preloader__number {
    font-size: 3rem;
  }
}

.detail__information__item__description, .detail__information__highlight__text, .collections__article__description, body {
  font-size: 1.6rem;
  font-weight: normal;
  line-height: 1.5;
}
@media (max-width: 767px) {
  .detail__information__item__description, .detail__information__highlight__text, .collections__article__description, body {
    font-size: 2.8rem;
  }
}

.navigation__list__link {
  font-family: "George X";
  font-size: 2rem;
}
@media (max-width: 767px) {
  .navigation__list__link {
    font-size: 4.8rem;
  }
}

.detail__information__link {
  font-family: "George X";
  font-size: 3rem;
}
@media (max-width: 767px) {
  .detail__information__link {
    font-size: 5.2rem;
  }
}

.preloader__text {
  font-family: "George X";
  font-size: 5.3rem;
  line-height: 1;
}

.collections__article__title {
  font-family: "George X";
  font-size: 6rem;
}

.about__title {
  font-family: "George X";
  font-size: 10rem;
  line-height: 1;
}
@media (max-width: 767px) {
  .about__title {
    font-size: 12rem;
  }
}

.detail__information__title {
  font-family: "George X";
  font-size: 12rem;
  line-height: 0.82;
}
@media (max-width: 767px) {
  .detail__information__title {
    font-size: 18rem;
  }
}

.about__highlight__title, .home__titles__title, .collections__titles__title {
  font-family: "George X";
  font-size: 20rem;
}

.home__titles, .collections__titles {
  align-items: center;
  display: flex;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%) rotate(-90deg);
  top: 50%;
}

.home__titles__label, .collections__titles__label {
  letter-spacing: 0.1rem;
  margin: 0 3rem;
  text-align: center;
  text-transform: uppercase;
  transform: rotate(90deg);
}

.home__titles__title, .collections__titles__title {
  padding-top: 2rem;
}

/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on June 25, 2023 */
@font-face {
  font-family: "George X";
  src: url(george_x-webfont.633696c86a8cb4ed640c..woff2) format("woff2"), url(george_x-webfont.12ae8cd041e72f781b59..woff) format("woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suissebpintl-light-webfont.ec80a98413c87c1958b4..woff2) format("woff2"), url(suissebpintl-light-webfont.ebbd53885f3fe97d5364..woff) format("woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suissebpintl-regular-webfont.340ab22faf822d06532c..woff2) format("woff2"), url(suissebpintl-regular-webfont.e358b0aa1de5267ffb11..woff) format("woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "Suisse BP";
  src: url(suissebpintl-ultralight-webfont.2b0beaefaafb6120030a..woff2) format("woff2"), url(suissebpintl-ultralight-webfont.18bbad3785251aeb3a5c..woff) format("woff");
  font-weight: normal;
  font-style: normal;
}
*, *:after, *:before {
  box-sizing: border-box;
}

html {
  font-size: 0.5208333333vw;
  line-height: 1;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  font-family: "Suisse BP";
}

a {
  outline: none;
  text-decoration: none;
  color: inherit;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

img {
  vertical-align: middle;
}

.preloader {
  background: #C97164;
  color: #F9F1E7;
  display: none;
  text-align: center;
  z-index: 3;
}

.preloader__text {
  max-width: 66rem;
}

.preloader__number {
  position: absolute;
  bottom: 7.3rem;
  left: 50%;
  transform: translateX(-50%);
}
@media (max-width: 767px) {
  .preloader__number {
    font-size: 2.5rem;
  }
}

.navigation {
  color: #F9F1E7;
  z-index: 2;
  position: fixed;
  pointer-events: none;
}

.navigation__link {
  font-size: 0;
  width: 12.8rem;
  height: 2rem;
  position: absolute;
  left: 4rem;
  top: 4rem;
  pointer-events: auto;
}
@media (max-width: 767px) {
  .navigation__link {
    height: 4.3rem;
    left: 5rem;
    top: 5rem;
    width: 27.9rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  right: 4rem;
  top: 4rem;
  pointer-events: auto;
}

.navigation__list__link {
  display: block;
}

.about {
  background: #B2B8C3;
  color: #37384C;
}

.about__title {
  margin: auto;
  max-width: 124rem;
  text-align: center;
}
@media (max-width: 767px) {
  .about__title {
    max-width: 67.7rem;
  }
}

.about__content {
  display: flex;
  justify-content: center;
  margin: 20rem auto;
  position: relative;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}
.about__content:nth-child(5) {
  justify-content: flex-end;
}
.about__content:nth-child(8) {
  justify-content: flex-start;
}

.about__content__wrapper {
  display: flex;
}
.about__content--right .about__content__wrapper {
  flex-direction: row-reverse;
}
@media (max-width: 767px) {
  .about__content:nth-child(3) .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content:nth-child(5) .about__content__wrapper {
    flex-direction: column;
  }
  .about__content:nth-child(8) .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content:nth-child(9) .about__content__wrapper {
    flex-direction: column-reverse;
  }
}

.about__content__box {
  display: flex;
}
@media (max-width: 767px) {
  .about__content__box {
    width: 60.9rem;
    margin: auto;
  }
  .about__content:nth-child(3) .about__content__box {
    margin-top: 10rem;
  }
  .about__content:nth-child(5) .about__content__box {
    margin-bottom: 10rem;
  }
  .about__content:nth-child(8) .about__content__box {
    margin-top: 10rem;
  }
  .about__content:nth-child(9) .about__content__box {
    margin-top: 10rem;
  }
}

.about__content__label {
  width: 18rem;
  text-transform: uppercase;
}
@media (max-width: 767px) {
  .about__content__label {
    font-size: 2.4rem;
    width: 15rem;
    padding-right: 2.5rem;
  }
}

.about__content__description {
  width: 36.2rem;
}
.about__content__description p:not(:first-child) {
  margin-top: 2.5rem;
}
@media (max-width: 767px) {
  .about__content__description {
    width: calc(100% - 15rem);
  }
}

.about__content__media {
  position: relative;
}
.about__content:nth-child(3) .about__content__media {
  height: 80.8rem;
  margin-left: 18rem;
  width: 53.8rem;
}
.about__content:nth-child(5) .about__content__media {
  height: 60rem;
  width: 96rem;
  margin-left: 18rem;
}
.about__content:nth-child(8) .about__content__media {
  height: 52rem;
  margin-right: 12rem;
  width: 84.2rem;
}
.about__content:nth-child(9) .about__content__media {
  height: 85.8rem;
  margin-left: 22rem;
  width: 60.8rem;
}
@media (max-width: 767px) {
  .about__content:nth-child(3) .about__content__media {
    height: 91.4rem;
    margin-left: 0;
    width: 60.9rem;
  }
  .about__content:nth-child(5) .about__content__media {
    height: 50rem;
    margin-left: 0;
    width: 100vw;
  }
  .about__content:nth-child(8) .about__content__media {
    height: 52rem;
    margin-right: 0;
    width: 100vw;
  }
  .about__content:nth-child(9) .about__content__media {
    height: 85.8rem;
    margin-left: 0;
    width: 60.8rem;
  }
}

.about__content__media__image {
  object-fit: cover;
}

.about__gallery {
  height: 58.6rem;
  margin: 20rem 0;
  overflow: hidden;
  position: relative;
}
.about__gallery:first-child {
  margin-top: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  height: 43.7rem;
  margin: 0 4rem;
  position: relative;
  width: 30.9rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem 0;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}

.about__highlight__wrapper {
  height: 104rem;
  margin: auto;
  width: 144rem;
  position: relative;
}
.about__highlight:nth-child(4) .about__highlight__wrapper {
  width: 104rem;
}
@media (max-width: 767px) {
  .about__highlight__wrapper {
    height: 316.2rem;
    width: 100%;
  }
  .about__highlight:nth-child(4) .about__highlight__wrapper {
    width: 100%;
    height: 119.3rem;
  }
}

.about__highlight__label {
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  top: 9rem;
  transform: translateX(-50%);
  width: 9.6rem;
  text-align: center;
  letter-spacing: 0.1rem;
}
@media (max-width: 767px) {
  .about__highlight__label {
    font-size: 2.4rem;
    margin: 6.5rem;
    top: 90rem;
    width: 19rem;
  }
}

.about__highlight__title {
  transform: translate(-50%, -50%) rotate(-90deg);
  position: absolute;
  top: 50%;
  left: 50%;
  padding-bottom: 2rem;
}
@media (max-width: 767px) {
  .about__highlight__title {
    font-size: 30rem;
    margin: 6.5rem;
  }
}

.about__highlight__media {
  height: 76rem;
  position: absolute;
  width: 54rem;
}
.about__highlight:nth-child(4) .about__highlight__media {
  height: 52.8rem;
  width: 36rem;
}
.about__highlight__media:first-child {
  left: 0;
  top: 0;
}
.about__highlight__media:last-child {
  bottom: 0;
  right: 0;
}
@media (max-width: 767px) {
  .about__highlight:last-child .about__highlight__media {
    height: 76rem;
    width: 54rem;
  }
  .about__highlight__media:first-child {
    left: 50%;
    top: 0;
    transform: translateX(-50%);
  }
  .about__highlight__media:last-child {
    bottom: 0;
    right: 50%;
    transform: translateX(50%);
  }
}

.about__highlight__media__image {
  object-fit: cover;
}

.collections {
  background: #BC978C;
  color: #F9F1E7;
}

.collections__wrapper {
  overflow: hidden;
}

@media (max-width: 767px) {
  .collections__titles {
    display: none;
  }
}

.collections__gallery__wrapper {
  align-items: center;
  display: flex;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collections__gallery__media {
  height: 63.1rem;
  position: relative;
  width: 44.7rem;
}

.collections__gallery__media__image {
  object-fit: cover;
}

@media (max-width: 767px) {
  .collections__content {
    display: none;
  }
}

.collections__article {
  bottom: 8rem;
  left: 8rem;
  opacity: 0;
  position: absolute;
}
.collections__article--active {
  opacity: 1;
}

.collections__article__description {
  max-width: 44rem;
}

.collections__mobile {
  display: flex;
  position: absolute;
  bottom: 5rem;
}

.collections__mobile__item {
  padding-left: 5rem;
  width: 100vw;
}

.collections__mobile__item__label {
  font-size: 2rem;
  letter-spacing: 0.1rem;
  text-transform: uppercase;
}

.collections__mobile__item__title {
  font-family: "George X";
  font-size: 12rem;
}

.detail {
  background: #BC978C;
  color: #F9F1E7;
}
@media (max-width: 767px) {
  .detail {
    height: auto;
  }
}

.detail__wrapper {
  align-items: center;
  display: flex;
}
@media (max-width: 767px) {
  .detail__wrapper {
    display: block;
    margin: auto;
    width: 66.1958rem;
    padding: 15rem 0 31.5rem;
  }
}

.detail__media {
  height: 78.2rem;
  position: relative;
  width: 55.4rem;
}
@media (max-width: 767px) {
  .detail__media {
    width: 100%;
    margin: 0 auto 7.8rem;
    height: 93.453rem;
  }
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  padding-left: 8.2rem;
}
@media (max-width: 767px) {
  .detail__information {
    padding-left: 0;
  }
}

.detail__information__collection {
  text-transform: uppercase;
  margin-bottom: 4rem;
}

.detail__information__title {
  max-width: 60rem;
}

.detail__information__content {
  padding-left: 18rem;
}
@media (max-width: 767px) {
  .detail__information__content {
    padding-left: 0;
  }
}

.detail__information__highlights {
  margin-top: 6rem;
}

.detail__information__highlight {
  align-items: center;
  display: flex;
}
.detail__information__highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__highlight__icon {
  width: 4rem;
  height: 4rem;
  margin-right: 3.75rem;
}
@media (max-width: 767px) {
  .detail__information__highlight__icon {
    width: 9.2rem;
    height: 9.2rem;
    margin-right: 5.8rem;
  }
}

.detail__information__list {
  margin-top: 4rem;
}

.detail__information__item {
  display: flex;
}
.detail__information__item:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__item__title {
  padding-right: 2.5rem;
  width: 10rem;
}
@media (max-width: 767px) {
  .detail__information__item__title {
    padding-right: 5rem;
    width: 15rem;
  }
}

.detail__information__item__description {
  letter-spacing: 0.03rem;
  max-width: 44rem;
}

.detail__information__link {
  margin-top: 3rem;
  display: inline-block;
}

.detail__button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 12.4rem;
  height: 6rem;
  position: absolute;
  left: 50%;
  bottom: 5rem;
  transform: translateX(-50%);
  z-index: 2;
}
@media (max-width: 767px) {
  .detail__button {
    width: 26.8rem;
    height: 13rem;
    bottom: 12rem;
  }
}

.home {
  background: #C97164;
  color: #F9F1E7;
  overflow: hidden;
  text-align: center;
}
.home:after, .home:before {
  content: "";
  height: 24rem;
  width: 100%;
  left: 0;
  position: absolute;
  z-index: 1;
}
.home:after {
  background: linear-gradient(to bottom, #C97164 0%, rgba(201, 113, 100, 0) 100%);
  top: 0;
}
.home::before {
  background: linear-gradient(to top, #C97164 0%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
}

.home__gallery {
  visibility: hidden;
}

.home__gallery__media {
  position: absolute;
}

.home__link {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28.8rem;
  height: 6rem;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  text-transform: uppercase;
  letter-spacing: 0.05rem;
  z-index: 2;
}
@media (max-width: 767px) {
  .home__link {
    bottom: 7.5rem;
    height: 13.7rem;
    width: 55rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/